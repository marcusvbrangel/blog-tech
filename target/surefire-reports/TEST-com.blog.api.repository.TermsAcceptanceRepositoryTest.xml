<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="2.331" tests="18" errors="0" skipped="0" failures="1">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/base/Documentos/desenvolvimento/claude-estudo/first-project/target/test-classes:/home/base/Documentos/desenvolvimento/claude-estudo/first-project/target/classes:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.0/spring-boot-starter-web-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.0/spring-boot-starter-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot/3.2.0/spring-boot-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.0/spring-boot-autoconfigure-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.0/spring-boot-starter-logging-3.2.0.jar:/home/base/.m2/repository/ch/qos/logback/logback-classic/1.4.11/logback-classic-1.4.11.jar:/home/base/.m2/repository/ch/qos/logback/logback-core/1.4.11/logback-core-1.4.11.jar:/home/base/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/home/base/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/home/base/.m2/repository/org/slf4j/jul-to-slf4j/2.0.9/jul-to-slf4j-2.0.9.jar:/home/base/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/base/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.0/spring-boot-starter-json-3.2.0.jar:/home/base/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/home/base/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/home/base/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.0/spring-boot-starter-tomcat-3.2.0.jar:/home/base/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.16/tomcat-embed-core-10.1.16.jar:/home/base/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.16/tomcat-embed-websocket-10.1.16.jar:/home/base/.m2/repository/org/springframework/spring-web/6.1.1/spring-web-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-beans/6.1.1/spring-beans-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-webmvc/6.1.1/spring-webmvc-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-context/6.1.1/spring-context-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-expression/6.1.1/spring-expression-6.1.1.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.0/spring-boot-starter-data-jpa-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.0/spring-boot-starter-aop-3.2.0.jar:/home/base/.m2/repository/org/aspectj/aspectjweaver/1.9.20.1/aspectjweaver-1.9.20.1.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.0/spring-boot-starter-jdbc-3.2.0.jar:/home/base/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/base/.m2/repository/org/springframework/spring-jdbc/6.1.1/spring-jdbc-6.1.1.jar:/home/base/.m2/repository/org/hibernate/orm/hibernate-core/6.3.1.Final/hibernate-core-6.3.1.Final.jar:/home/base/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/base/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/base/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/base/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/base/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/base/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/home/base/.m2/repository/net/bytebuddy/byte-buddy/1.14.10/byte-buddy-1.14.10.jar:/home/base/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/home/base/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/home/base/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/home/base/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/base/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/base/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/home/base/.m2/repository/org/springframework/data/spring-data-jpa/3.2.0/spring-data-jpa-3.2.0.jar:/home/base/.m2/repository/org/springframework/data/spring-data-commons/3.2.0/spring-data-commons-3.2.0.jar:/home/base/.m2/repository/org/springframework/spring-orm/6.1.1/spring-orm-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-tx/6.1.1/spring-tx-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-aspects/6.1.1/spring-aspects-6.1.1.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.0/spring-boot-starter-security-3.2.0.jar:/home/base/.m2/repository/org/springframework/spring-aop/6.1.1/spring-aop-6.1.1.jar:/home/base/.m2/repository/org/springframework/security/spring-security-config/6.2.0/spring-security-config-6.2.0.jar:/home/base/.m2/repository/org/springframework/security/spring-security-web/6.2.0/spring-security-web-6.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.0/spring-boot-starter-validation-3.2.0.jar:/home/base/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.16/tomcat-embed-el-10.1.16.jar:/home/base/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/home/base/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.2.0/spring-boot-starter-actuator-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.2.0/spring-boot-actuator-autoconfigure-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-actuator/3.2.0/spring-boot-actuator-3.2.0.jar:/home/base/.m2/repository/io/micrometer/micrometer-observation/1.12.0/micrometer-observation-1.12.0.jar:/home/base/.m2/repository/io/micrometer/micrometer-commons/1.12.0/micrometer-commons-1.12.0.jar:/home/base/.m2/repository/io/micrometer/micrometer-jakarta9/1.12.0/micrometer-jakarta9-1.12.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/3.2.0/spring-boot-starter-data-redis-3.2.0.jar:/home/base/.m2/repository/io/lettuce/lettuce-core/6.3.0.RELEASE/lettuce-core-6.3.0.RELEASE.jar:/home/base/.m2/repository/io/netty/netty-common/4.1.101.Final/netty-common-4.1.101.Final.jar:/home/base/.m2/repository/io/netty/netty-handler/4.1.101.Final/netty-handler-4.1.101.Final.jar:/home/base/.m2/repository/io/netty/netty-resolver/4.1.101.Final/netty-resolver-4.1.101.Final.jar:/home/base/.m2/repository/io/netty/netty-buffer/4.1.101.Final/netty-buffer-4.1.101.Final.jar:/home/base/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.101.Final/netty-transport-native-unix-common-4.1.101.Final.jar:/home/base/.m2/repository/io/netty/netty-codec/4.1.101.Final/netty-codec-4.1.101.Final.jar:/home/base/.m2/repository/io/netty/netty-transport/4.1.101.Final/netty-transport-4.1.101.Final.jar:/home/base/.m2/repository/io/projectreactor/reactor-core/3.6.0/reactor-core-3.6.0.jar:/home/base/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/home/base/.m2/repository/org/springframework/data/spring-data-redis/3.2.0/spring-data-redis-3.2.0.jar:/home/base/.m2/repository/org/springframework/data/spring-data-keyvalue/3.2.0/spring-data-keyvalue-3.2.0.jar:/home/base/.m2/repository/org/springframework/spring-oxm/6.1.1/spring-oxm-6.1.1.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.2.0/spring-boot-starter-cache-3.2.0.jar:/home/base/.m2/repository/org/springframework/spring-context-support/6.1.1/spring-context-support-6.1.1.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-mail/3.2.0/spring-boot-starter-mail-3.2.0.jar:/home/base/.m2/repository/org/eclipse/angus/jakarta.mail/2.0.2/jakarta.mail-2.0.2.jar:/home/base/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/base/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/base/.m2/repository/io/micrometer/micrometer-registry-prometheus/1.12.0/micrometer-registry-prometheus-1.12.0.jar:/home/base/.m2/repository/io/micrometer/micrometer-core/1.12.0/micrometer-core-1.12.0.jar:/home/base/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/home/base/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/home/base/.m2/repository/io/prometheus/simpleclient_common/0.16.0/simpleclient_common-0.16.0.jar:/home/base/.m2/repository/io/prometheus/simpleclient/0.16.0/simpleclient-0.16.0.jar:/home/base/.m2/repository/io/prometheus/simpleclient_tracer_otel/0.16.0/simpleclient_tracer_otel-0.16.0.jar:/home/base/.m2/repository/io/prometheus/simpleclient_tracer_common/0.16.0/simpleclient_tracer_common-0.16.0.jar:/home/base/.m2/repository/io/prometheus/simpleclient_tracer_otel_agent/0.16.0/simpleclient_tracer_otel_agent-0.16.0.jar:/home/base/.m2/repository/io/micrometer/micrometer-tracing-bridge-brave/1.2.0/micrometer-tracing-bridge-brave-1.2.0.jar:/home/base/.m2/repository/io/micrometer/micrometer-tracing/1.2.0/micrometer-tracing-1.2.0.jar:/home/base/.m2/repository/io/micrometer/context-propagation/1.1.0/context-propagation-1.1.0.jar:/home/base/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/base/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/home/base/.m2/repository/io/zipkin/brave/brave/5.16.0/brave-5.16.0.jar:/home/base/.m2/repository/io/zipkin/brave/brave-context-slf4j/5.16.0/brave-context-slf4j-5.16.0.jar:/home/base/.m2/repository/io/zipkin/brave/brave-instrumentation-http/5.16.0/brave-instrumentation-http-5.16.0.jar:/home/base/.m2/repository/io/zipkin/aws/brave-propagation-aws/0.23.5/brave-propagation-aws-0.23.5.jar:/home/base/.m2/repository/io/zipkin/reporter2/zipkin-reporter-brave/2.16.3/zipkin-reporter-brave-2.16.3.jar:/home/base/.m2/repository/io/zipkin/reporter2/zipkin-reporter/2.16.3/zipkin-reporter-2.16.3.jar:/home/base/.m2/repository/io/zipkin/zipkin2/zipkin/2.23.2/zipkin-2.23.2.jar:/home/base/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/base/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/base/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/home/base/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/home/base/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/home/base/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/home/base/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/home/base/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/home/base/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.2.0/springdoc-openapi-starter-webmvc-ui-2.2.0.jar:/home/base/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.2.0/springdoc-openapi-starter-webmvc-api-2.2.0.jar:/home/base/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.2.0/springdoc-openapi-starter-common-2.2.0.jar:/home/base/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.15/swagger-core-jakarta-2.2.15.jar:/home/base/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/home/base/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.15/swagger-annotations-jakarta-2.2.15.jar:/home/base/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.15/swagger-models-jakarta-2.2.15.jar:/home/base/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.3/jackson-dataformat-yaml-2.15.3.jar:/home/base/.m2/repository/org/webjars/swagger-ui/5.2.0/swagger-ui-5.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.0/spring-boot-starter-test-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-test/3.2.0/spring-boot-test-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.0/spring-boot-test-autoconfigure-3.2.0.jar:/home/base/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/base/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/home/base/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/home/base/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/home/base/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/base/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/base/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/home/base/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/base/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/home/base/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/home/base/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/base/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/home/base/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/base/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/home/base/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/home/base/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/home/base/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/home/base/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.10/byte-buddy-agent-1.14.10.jar:/home/base/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/base/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/home/base/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/base/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/base/.m2/repository/org/springframework/spring-core/6.1.1/spring-core-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-jcl/6.1.1/spring-jcl-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-test/6.1.1/spring-test-6.1.1.jar:/home/base/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/home/base/.m2/repository/org/springframework/security/spring-security-test/6.2.0/spring-security-test-6.2.0.jar:/home/base/.m2/repository/org/springframework/security/spring-security-core/6.2.0/spring-security-core-6.2.0.jar:/home/base/.m2/repository/org/springframework/security/spring-security-crypto/6.2.0/spring-security-crypto-6.2.0.jar:/home/base/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="BR"/>
    <property name="sun.boot.library.path" value="/home/base/.sdkman/candidates/java/21.0.7-tem/lib"/>
    <property name="sun.java.command" value="/home/base/Documentos/desenvolvimento/claude-estudo/first-project/target/surefire/surefirebooter-20250801172654211_3.jar /home/base/Documentos/desenvolvimento/claude-estudo/first-project/target/surefire 2025-08-01T17-26-54_086-jvmRun1 surefire-20250801172654211_1tmp surefire_0-20250801172654211_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/base/Documentos/desenvolvimento/claude-estudo/first-project/target/test-classes:/home/base/Documentos/desenvolvimento/claude-estudo/first-project/target/classes:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.0/spring-boot-starter-web-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.0/spring-boot-starter-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot/3.2.0/spring-boot-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.0/spring-boot-autoconfigure-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.0/spring-boot-starter-logging-3.2.0.jar:/home/base/.m2/repository/ch/qos/logback/logback-classic/1.4.11/logback-classic-1.4.11.jar:/home/base/.m2/repository/ch/qos/logback/logback-core/1.4.11/logback-core-1.4.11.jar:/home/base/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/home/base/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/home/base/.m2/repository/org/slf4j/jul-to-slf4j/2.0.9/jul-to-slf4j-2.0.9.jar:/home/base/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/base/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.0/spring-boot-starter-json-3.2.0.jar:/home/base/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/home/base/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/home/base/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.0/spring-boot-starter-tomcat-3.2.0.jar:/home/base/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.16/tomcat-embed-core-10.1.16.jar:/home/base/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.16/tomcat-embed-websocket-10.1.16.jar:/home/base/.m2/repository/org/springframework/spring-web/6.1.1/spring-web-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-beans/6.1.1/spring-beans-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-webmvc/6.1.1/spring-webmvc-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-context/6.1.1/spring-context-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-expression/6.1.1/spring-expression-6.1.1.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.0/spring-boot-starter-data-jpa-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.0/spring-boot-starter-aop-3.2.0.jar:/home/base/.m2/repository/org/aspectj/aspectjweaver/1.9.20.1/aspectjweaver-1.9.20.1.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.0/spring-boot-starter-jdbc-3.2.0.jar:/home/base/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/base/.m2/repository/org/springframework/spring-jdbc/6.1.1/spring-jdbc-6.1.1.jar:/home/base/.m2/repository/org/hibernate/orm/hibernate-core/6.3.1.Final/hibernate-core-6.3.1.Final.jar:/home/base/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/base/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/base/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/base/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/base/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/base/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/home/base/.m2/repository/net/bytebuddy/byte-buddy/1.14.10/byte-buddy-1.14.10.jar:/home/base/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/home/base/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/home/base/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/home/base/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/base/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/base/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/home/base/.m2/repository/org/springframework/data/spring-data-jpa/3.2.0/spring-data-jpa-3.2.0.jar:/home/base/.m2/repository/org/springframework/data/spring-data-commons/3.2.0/spring-data-commons-3.2.0.jar:/home/base/.m2/repository/org/springframework/spring-orm/6.1.1/spring-orm-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-tx/6.1.1/spring-tx-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-aspects/6.1.1/spring-aspects-6.1.1.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.0/spring-boot-starter-security-3.2.0.jar:/home/base/.m2/repository/org/springframework/spring-aop/6.1.1/spring-aop-6.1.1.jar:/home/base/.m2/repository/org/springframework/security/spring-security-config/6.2.0/spring-security-config-6.2.0.jar:/home/base/.m2/repository/org/springframework/security/spring-security-web/6.2.0/spring-security-web-6.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.0/spring-boot-starter-validation-3.2.0.jar:/home/base/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.16/tomcat-embed-el-10.1.16.jar:/home/base/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/home/base/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.2.0/spring-boot-starter-actuator-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.2.0/spring-boot-actuator-autoconfigure-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-actuator/3.2.0/spring-boot-actuator-3.2.0.jar:/home/base/.m2/repository/io/micrometer/micrometer-observation/1.12.0/micrometer-observation-1.12.0.jar:/home/base/.m2/repository/io/micrometer/micrometer-commons/1.12.0/micrometer-commons-1.12.0.jar:/home/base/.m2/repository/io/micrometer/micrometer-jakarta9/1.12.0/micrometer-jakarta9-1.12.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/3.2.0/spring-boot-starter-data-redis-3.2.0.jar:/home/base/.m2/repository/io/lettuce/lettuce-core/6.3.0.RELEASE/lettuce-core-6.3.0.RELEASE.jar:/home/base/.m2/repository/io/netty/netty-common/4.1.101.Final/netty-common-4.1.101.Final.jar:/home/base/.m2/repository/io/netty/netty-handler/4.1.101.Final/netty-handler-4.1.101.Final.jar:/home/base/.m2/repository/io/netty/netty-resolver/4.1.101.Final/netty-resolver-4.1.101.Final.jar:/home/base/.m2/repository/io/netty/netty-buffer/4.1.101.Final/netty-buffer-4.1.101.Final.jar:/home/base/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.101.Final/netty-transport-native-unix-common-4.1.101.Final.jar:/home/base/.m2/repository/io/netty/netty-codec/4.1.101.Final/netty-codec-4.1.101.Final.jar:/home/base/.m2/repository/io/netty/netty-transport/4.1.101.Final/netty-transport-4.1.101.Final.jar:/home/base/.m2/repository/io/projectreactor/reactor-core/3.6.0/reactor-core-3.6.0.jar:/home/base/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/home/base/.m2/repository/org/springframework/data/spring-data-redis/3.2.0/spring-data-redis-3.2.0.jar:/home/base/.m2/repository/org/springframework/data/spring-data-keyvalue/3.2.0/spring-data-keyvalue-3.2.0.jar:/home/base/.m2/repository/org/springframework/spring-oxm/6.1.1/spring-oxm-6.1.1.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.2.0/spring-boot-starter-cache-3.2.0.jar:/home/base/.m2/repository/org/springframework/spring-context-support/6.1.1/spring-context-support-6.1.1.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-mail/3.2.0/spring-boot-starter-mail-3.2.0.jar:/home/base/.m2/repository/org/eclipse/angus/jakarta.mail/2.0.2/jakarta.mail-2.0.2.jar:/home/base/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/base/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/base/.m2/repository/io/micrometer/micrometer-registry-prometheus/1.12.0/micrometer-registry-prometheus-1.12.0.jar:/home/base/.m2/repository/io/micrometer/micrometer-core/1.12.0/micrometer-core-1.12.0.jar:/home/base/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/home/base/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/home/base/.m2/repository/io/prometheus/simpleclient_common/0.16.0/simpleclient_common-0.16.0.jar:/home/base/.m2/repository/io/prometheus/simpleclient/0.16.0/simpleclient-0.16.0.jar:/home/base/.m2/repository/io/prometheus/simpleclient_tracer_otel/0.16.0/simpleclient_tracer_otel-0.16.0.jar:/home/base/.m2/repository/io/prometheus/simpleclient_tracer_common/0.16.0/simpleclient_tracer_common-0.16.0.jar:/home/base/.m2/repository/io/prometheus/simpleclient_tracer_otel_agent/0.16.0/simpleclient_tracer_otel_agent-0.16.0.jar:/home/base/.m2/repository/io/micrometer/micrometer-tracing-bridge-brave/1.2.0/micrometer-tracing-bridge-brave-1.2.0.jar:/home/base/.m2/repository/io/micrometer/micrometer-tracing/1.2.0/micrometer-tracing-1.2.0.jar:/home/base/.m2/repository/io/micrometer/context-propagation/1.1.0/context-propagation-1.1.0.jar:/home/base/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/base/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/home/base/.m2/repository/io/zipkin/brave/brave/5.16.0/brave-5.16.0.jar:/home/base/.m2/repository/io/zipkin/brave/brave-context-slf4j/5.16.0/brave-context-slf4j-5.16.0.jar:/home/base/.m2/repository/io/zipkin/brave/brave-instrumentation-http/5.16.0/brave-instrumentation-http-5.16.0.jar:/home/base/.m2/repository/io/zipkin/aws/brave-propagation-aws/0.23.5/brave-propagation-aws-0.23.5.jar:/home/base/.m2/repository/io/zipkin/reporter2/zipkin-reporter-brave/2.16.3/zipkin-reporter-brave-2.16.3.jar:/home/base/.m2/repository/io/zipkin/reporter2/zipkin-reporter/2.16.3/zipkin-reporter-2.16.3.jar:/home/base/.m2/repository/io/zipkin/zipkin2/zipkin/2.23.2/zipkin-2.23.2.jar:/home/base/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/base/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/base/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/home/base/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/home/base/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/home/base/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/home/base/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/home/base/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/home/base/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.2.0/springdoc-openapi-starter-webmvc-ui-2.2.0.jar:/home/base/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.2.0/springdoc-openapi-starter-webmvc-api-2.2.0.jar:/home/base/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.2.0/springdoc-openapi-starter-common-2.2.0.jar:/home/base/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.15/swagger-core-jakarta-2.2.15.jar:/home/base/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/home/base/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.15/swagger-annotations-jakarta-2.2.15.jar:/home/base/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.15/swagger-models-jakarta-2.2.15.jar:/home/base/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.3/jackson-dataformat-yaml-2.15.3.jar:/home/base/.m2/repository/org/webjars/swagger-ui/5.2.0/swagger-ui-5.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.0/spring-boot-starter-test-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-test/3.2.0/spring-boot-test-3.2.0.jar:/home/base/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.0/spring-boot-test-autoconfigure-3.2.0.jar:/home/base/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/base/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/home/base/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/home/base/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/home/base/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/base/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/base/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/home/base/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/base/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/home/base/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/home/base/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/base/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/home/base/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/base/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/home/base/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/home/base/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/home/base/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/home/base/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.10/byte-buddy-agent-1.14.10.jar:/home/base/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/base/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/home/base/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/base/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/base/.m2/repository/org/springframework/spring-core/6.1.1/spring-core-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-jcl/6.1.1/spring-jcl-6.1.1.jar:/home/base/.m2/repository/org/springframework/spring-test/6.1.1/spring-test-6.1.1.jar:/home/base/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/home/base/.m2/repository/org/springframework/security/spring-security-test/6.2.0/spring-security-test-6.2.0.jar:/home/base/.m2/repository/org/springframework/security/spring-security-core/6.2.0/spring-security-core-6.2.0.jar:/home/base/.m2/repository/org/springframework/security/spring-security-crypto/6.2.0/spring-security-crypto-6.2.0.jar:/home/base/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/base"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="/home/base/.sdkman/candidates/java/21.0.7-tem"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/base/Documentos/desenvolvimento/claude-estudo/first-project"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="mockito.verboseLogging" value="false"/>
    <property name="surefire.real.class.path" value="/home/base/Documentos/desenvolvimento/claude-estudo/first-project/target/surefire/surefirebooter-20250801172654211_3.jar"/>
    <property name="org.slf4j.simpleLogger.log.org.springframework.test" value="error"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="jdk.instrument.traceUsage" value="false"/>
    <property name="java.runtime.version" value="21.0.7+6-LTS"/>
    <property name="LOG_CORRELATION_PATTERN" value="%correlationId"/>
    <property name="user.name" value="base"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.14.0-27-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-21.0.7+6"/>
    <property name="localRepository" value="/home/base/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="21.0.7"/>
    <property name="user.dir" value="/home/base/Documentos/desenvolvimento/claude-estudo/first-project"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="240539"/>
    <property name="org.slf4j.simpleLogger.defaultLogLevel" value="warn"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="21.0.7+6-LTS"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[blog-api] "/>
  </properties>
  <testcase name="existsByUser_ShouldReturnCorrectResult" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.088">
    <system-out><![CDATA[2025-08-01T17:27:22.978-03:00  INFO 240539 --- [blog-api] [           main] [                                                 ] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.blog.api.repository.TermsAcceptanceRepositoryTest]: TermsAcceptanceRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-08-01T17:27:22.998-03:00  INFO 240539 --- [blog-api] [           main] [                                                 ] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.blog.api.BlogApiApplication for test class com.blog.api.repository.TermsAcceptanceRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-08-01T17:27:23.082-03:00  INFO 240539 --- [blog-api] [           main] [                                                 ] c.b.a.r.TermsAcceptanceRepositoryTest    : Starting TermsAcceptanceRepositoryTest using Java 21.0.7 with PID 240539 (started by base in /home/base/Documentos/desenvolvimento/claude-estudo/first-project)
2025-08-01T17:27:23.082-03:00 DEBUG 240539 --- [blog-api] [           main] [                                                 ] c.b.a.r.TermsAcceptanceRepositoryTest    : Running with Spring Boot v3.2.0, Spring v6.1.1
2025-08-01T17:27:23.082-03:00  INFO 240539 --- [blog-api] [           main] [                                                 ] c.b.a.r.TermsAcceptanceRepositoryTest    : The following 1 profile is active: "test"
2025-08-01T17:27:23.267-03:00  INFO 240539 --- [blog-api] [           main] [                                                 ] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-01T17:27:23.267-03:00  INFO 240539 --- [blog-api] [           main] [                                                 ] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-01T17:27:23.296-03:00  INFO 240539 --- [blog-api] [           main] [                                                 ] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28 ms. Found 6 JPA repository interfaces.
2025-08-01T17:27:23.323-03:00  INFO 240539 --- [blog-api] [           main] [                                                 ] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2025-08-01T17:27:23.364-03:00  INFO 240539 --- [blog-api] [           main] [                                                 ] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:e2a07d8f-6e2f-467e-8d49-c2cd141f8133;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-01T17:27:23.443-03:00  INFO 240539 --- [blog-api] [           main] [                                                 ] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-01T17:27:23.452-03:00  WARN 240539 --- [blog-api] [           main] [                                                 ] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
Hibernate: drop table if exists categories cascade 
Hibernate: drop table if exists comments cascade 
Hibernate: drop table if exists posts cascade 
Hibernate: drop table if exists terms_acceptance cascade 
Hibernate: drop table if exists users cascade 
Hibernate: drop table if exists verification_tokens cascade 
Hibernate: create table categories (id bigint generated by default as identity, description varchar(255), name varchar(255) unique, primary key (id))
Hibernate: create table comments (created_at timestamp(6), id bigint generated by default as identity, parent_id bigint, post_id bigint not null, user_id bigint not null, content TEXT, primary key (id))
Hibernate: create table posts (published boolean not null, category_id bigint, created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), user_id bigint not null, content TEXT, title varchar(255), primary key (id))
Hibernate: create table terms_acceptance (accepted_at timestamp(6) not null, id bigint generated by default as identity, user_id bigint not null, ip_address varchar(255), terms_version varchar(255) not null, user_agent TEXT, primary key (id))
Hibernate: create table users (account_locked boolean, email_verified boolean, failed_login_attempts integer, created_at timestamp(6), email_verified_at timestamp(6), id bigint generated by default as identity, last_login timestamp(6), locked_until timestamp(6), password_changed_at timestamp(6), email varchar(255) unique, password varchar(255), role varchar(255) check (role in ('USER','AUTHOR','ADMIN')), terms_accepted_version varchar(255), username varchar(255) unique, primary key (id))
Hibernate: create table verification_tokens (created_at timestamp(6), expires_at timestamp(6) not null, id bigint generated by default as identity, used_at timestamp(6), user_id bigint not null, token varchar(255) not null unique, token_type varchar(255) not null check (token_type in ('EMAIL_VERIFICATION','PASSWORD_RESET','PHONE_VERIFICATION')), primary key (id))
Hibernate: alter table if exists comments add constraint FKlri30okf66phtcgbe5pok7cc0 foreign key (parent_id) references comments
Hibernate: alter table if exists comments add constraint FKh4c7lvsc298whoyd4w9ta25cr foreign key (post_id) references posts
Hibernate: alter table if exists comments add constraint FK8omq0tc18jd43bu5tjh6jvraq foreign key (user_id) references users
Hibernate: alter table if exists posts add constraint FKijnwr3brs8vaosl80jg9rp7uc foreign key (category_id) references categories
Hibernate: alter table if exists posts add constraint FK5lidm6cqbc7u4xhqpxm898qme foreign key (user_id) references users
Hibernate: alter table if exists terms_acceptance add constraint FK1r5ej7gned9fbpexbgiglhkf1 foreign key (user_id) references users
Hibernate: alter table if exists verification_tokens add constraint FK54y8mqsnq1rtyf581sfmrbp4f foreign key (user_id) references users
2025-08-01T17:27:23.877-03:00  INFO 240539 --- [blog-api] [           main] [                                                 ] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-01T17:27:24.365-03:00  INFO 240539 --- [blog-api] [           main] [                                                 ] c.b.a.r.TermsAcceptanceRepositoryTest    : Started TermsAcceptanceRepositoryTest in 1.357 seconds (process running for 30.061)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select ta1_0.id from terms_acceptance ta1_0 where ta1_0.user_id=? fetch first ? rows only
Hibernate: select ta1_0.id from terms_acceptance ta1_0 where ta1_0.user_id=? fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="countByTermsVersion_ShouldReturnCorrectCount" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.04">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select count(ta1_0.id) from terms_acceptance ta1_0 where ta1_0.terms_version=?
Hibernate: select count(ta1_0.id) from terms_acceptance ta1_0 where ta1_0.terms_version=?
Hibernate: select count(ta1_0.id) from terms_acceptance ta1_0 where ta1_0.terms_version=?
]]></system-out>
  </testcase>
  <testcase name="findByAcceptedAtBetweenWithPagination_ShouldReturnPagedResults" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.124">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select ta1_0.id,ta1_0.accepted_at,ta1_0.ip_address,ta1_0.terms_version,ta1_0.user_id,ta1_0.user_agent from terms_acceptance ta1_0 where ta1_0.accepted_at between ? and ? order by ta1_0.accepted_at desc offset ? rows fetch first ? rows only
Hibernate: select count(ta1_0.id) from terms_acceptance ta1_0 where ta1_0.accepted_at between ? and ?
]]></system-out>
  </testcase>
  <testcase name="findByTermsVersionOrderByAcceptedAtDesc_ShouldReturnAllAcceptancesForVersion" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.031">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select ta1_0.id,ta1_0.accepted_at,ta1_0.ip_address,ta1_0.terms_version,ta1_0.user_id,ta1_0.user_agent from terms_acceptance ta1_0 where ta1_0.terms_version=? order by ta1_0.accepted_at desc
]]></system-out>
  </testcase>
  <testcase name="findByUserIdOrderByAcceptedAtDesc_ShouldReturnAllUserAcceptancesOrdered" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.04">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select ta1_0.id,ta1_0.accepted_at,ta1_0.ip_address,ta1_0.terms_version,ta1_0.user_id,ta1_0.user_agent from terms_acceptance ta1_0 where ta1_0.user_id=? order by ta1_0.accepted_at desc
]]></system-out>
  </testcase>
  <testcase name="findByUserOrderByAcceptedAtDesc_ShouldReturnAllUserAcceptancesOrdered" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.03">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select ta1_0.id,ta1_0.accepted_at,ta1_0.ip_address,ta1_0.terms_version,ta1_0.user_id,ta1_0.user_agent from terms_acceptance ta1_0 where ta1_0.user_id=? order by ta1_0.accepted_at desc
]]></system-out>
  </testcase>
  <testcase name="findUsersWithoutLatestTermsWithPagination_ShouldReturnPagedResults" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.095">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select u1_0.id,u1_0.account_locked,u1_0.created_at,u1_0.email,u1_0.email_verified,u1_0.email_verified_at,u1_0.failed_login_attempts,u1_0.last_login,u1_0.locked_until,u1_0.password,u1_0.password_changed_at,u1_0.role,u1_0.terms_accepted_version,u1_0.username,c1_0.user_id,c1_0.id,c1_0.content,c1_0.created_at,c1_0.parent_id,c1_0.post_id from users u1_0 left join comments c1_0 on u1_0.id=c1_0.user_id where u1_0.id=?
Hibernate: select p1_0.user_id,p1_0.id,p1_0.category_id,p1_0.content,p1_0.created_at,p1_0.published,p1_0.title,p1_0.updated_at from posts p1_0 where p1_0.user_id=?
Hibernate: select u1_0.id,u1_0.account_locked,u1_0.created_at,u1_0.email,u1_0.email_verified,u1_0.email_verified_at,u1_0.failed_login_attempts,u1_0.last_login,u1_0.locked_until,u1_0.password,u1_0.password_changed_at,u1_0.role,u1_0.terms_accepted_version,u1_0.username,c1_0.user_id,c1_0.id,c1_0.content,c1_0.created_at,c1_0.parent_id,c1_0.post_id from users u1_0 left join comments c1_0 on u1_0.id=c1_0.user_id where u1_0.id=?
Hibernate: select p1_0.user_id,p1_0.id,p1_0.category_id,p1_0.content,p1_0.created_at,p1_0.published,p1_0.title,p1_0.updated_at from posts p1_0 where p1_0.user_id=?
Hibernate: update users set account_locked=?,email=?,email_verified=?,email_verified_at=?,failed_login_attempts=?,last_login=?,locked_until=?,password=?,password_changed_at=?,role=?,terms_accepted_version=?,username=? where id=?
Hibernate: update users set account_locked=?,email=?,email_verified=?,email_verified_at=?,failed_login_attempts=?,last_login=?,locked_until=?,password=?,password_changed_at=?,role=?,terms_accepted_version=?,username=? where id=?
Hibernate: select distinct u1_0.id,u1_0.account_locked,u1_0.created_at,u1_0.email,u1_0.email_verified,u1_0.email_verified_at,u1_0.failed_login_attempts,u1_0.last_login,u1_0.locked_until,u1_0.password,u1_0.password_changed_at,u1_0.role,u1_0.terms_accepted_version,u1_0.username from users u1_0 where u1_0.terms_accepted_version!=? or u1_0.terms_accepted_version is null offset ? rows fetch first ? rows only
Hibernate: select count(distinct u1_0.id) from users u1_0 where u1_0.terms_accepted_version!=? or u1_0.terms_accepted_version is null
]]></system-out>
  </testcase>
  <testcase name="cascadeDelete_WhenUserDeleted_ShouldDeleteAcceptances" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.095">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select count(*) from terms_acceptance ta1_0
Hibernate: select ta1_0.id,ta1_0.accepted_at,ta1_0.ip_address,ta1_0.terms_version,ta1_0.user_id,ta1_0.user_agent from terms_acceptance ta1_0 where ta1_0.user_id=? order by ta1_0.accepted_at desc
Hibernate: delete from terms_acceptance where id=?
Hibernate: delete from terms_acceptance where id=?
Hibernate: select u1_0.id,u1_0.account_locked,u1_0.created_at,u1_0.email,u1_0.email_verified,u1_0.email_verified_at,u1_0.failed_login_attempts,u1_0.last_login,u1_0.locked_until,u1_0.password,u1_0.password_changed_at,u1_0.role,u1_0.terms_accepted_version,u1_0.username,c1_0.user_id,c1_0.id,c1_0.content,c1_0.created_at,c1_0.parent_id,c1_0.post_id from users u1_0 left join comments c1_0 on u1_0.id=c1_0.user_id where u1_0.id=?
Hibernate: select p1_0.user_id,p1_0.id,p1_0.category_id,p1_0.content,p1_0.created_at,p1_0.published,p1_0.title,p1_0.updated_at from posts p1_0 where p1_0.user_id=?
Hibernate: delete from users where id=?
Hibernate: select count(*) from terms_acceptance ta1_0
Hibernate: select count(ta1_0.id)>0 from terms_acceptance ta1_0 where ta1_0.user_id=?
]]></system-out>
  </testcase>
  <testcase name="findLatestByUserId_ShouldReturnLatestAcceptance" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.026">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select ta1_0.id,ta1_0.accepted_at,ta1_0.ip_address,ta1_0.terms_version,ta1_0.user_id,ta1_0.user_agent from terms_acceptance ta1_0 where ta1_0.user_id=? order by ta1_0.accepted_at desc fetch first 1 rows only
]]></system-out>
  </testcase>
  <testcase name="findByAcceptedAtBetween_ShouldReturnAcceptancesInDateRange" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.043">
    <failure message="&#10;Expected size: 2 but was: 0 in:&#10;[]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 

Expected size: 2 but was: 0 in:
[]
	at com.blog.api.repository.TermsAcceptanceRepositoryTest.findByAcceptedAtBetween_ShouldReturnAcceptancesInDateRange(TermsAcceptanceRepositoryTest.java:182)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></failure>
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select ta1_0.id,ta1_0.accepted_at,ta1_0.ip_address,ta1_0.terms_version,ta1_0.user_id,ta1_0.user_agent from terms_acceptance ta1_0 where ta1_0.accepted_at between ? and ? order by ta1_0.accepted_at desc
]]></system-out>
  </testcase>
  <testcase name="findTopByUserOrderByAcceptedAtDesc_ShouldReturnLatestAcceptance" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.022">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select ta1_0.id,ta1_0.accepted_at,ta1_0.ip_address,ta1_0.terms_version,ta1_0.user_id,ta1_0.user_agent from terms_acceptance ta1_0 where ta1_0.user_id=? order by ta1_0.accepted_at desc fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="getAcceptanceStatistics_ShouldReturnCorrectStatistics" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.04">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select count(ta1_0.id),count(distinct ta1_0.user_id),min(ta1_0.accepted_at),max(ta1_0.accepted_at) from terms_acceptance ta1_0 where ta1_0.terms_version=?
]]></system-out>
  </testcase>
  <testcase name="findUsersWithoutLatestTerms_ShouldReturnCorrectUsers" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.06">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select u1_0.id,u1_0.account_locked,u1_0.created_at,u1_0.email,u1_0.email_verified,u1_0.email_verified_at,u1_0.failed_login_attempts,u1_0.last_login,u1_0.locked_until,u1_0.password,u1_0.password_changed_at,u1_0.role,u1_0.terms_accepted_version,u1_0.username,c1_0.user_id,c1_0.id,c1_0.content,c1_0.created_at,c1_0.parent_id,c1_0.post_id from users u1_0 left join comments c1_0 on u1_0.id=c1_0.user_id where u1_0.id=?
Hibernate: select p1_0.user_id,p1_0.id,p1_0.category_id,p1_0.content,p1_0.created_at,p1_0.published,p1_0.title,p1_0.updated_at from posts p1_0 where p1_0.user_id=?
Hibernate: select u1_0.id,u1_0.account_locked,u1_0.created_at,u1_0.email,u1_0.email_verified,u1_0.email_verified_at,u1_0.failed_login_attempts,u1_0.last_login,u1_0.locked_until,u1_0.password,u1_0.password_changed_at,u1_0.role,u1_0.terms_accepted_version,u1_0.username,c1_0.user_id,c1_0.id,c1_0.content,c1_0.created_at,c1_0.parent_id,c1_0.post_id from users u1_0 left join comments c1_0 on u1_0.id=c1_0.user_id where u1_0.id=?
Hibernate: select p1_0.user_id,p1_0.id,p1_0.category_id,p1_0.content,p1_0.created_at,p1_0.published,p1_0.title,p1_0.updated_at from posts p1_0 where p1_0.user_id=?
Hibernate: update users set account_locked=?,email=?,email_verified=?,email_verified_at=?,failed_login_attempts=?,last_login=?,locked_until=?,password=?,password_changed_at=?,role=?,terms_accepted_version=?,username=? where id=?
Hibernate: update users set account_locked=?,email=?,email_verified=?,email_verified_at=?,failed_login_attempts=?,last_login=?,locked_until=?,password=?,password_changed_at=?,role=?,terms_accepted_version=?,username=? where id=?
Hibernate: select distinct u1_0.id,u1_0.account_locked,u1_0.created_at,u1_0.email,u1_0.email_verified,u1_0.email_verified_at,u1_0.failed_login_attempts,u1_0.last_login,u1_0.locked_until,u1_0.password,u1_0.password_changed_at,u1_0.role,u1_0.terms_accepted_version,u1_0.username from users u1_0 where u1_0.terms_accepted_version!=? or u1_0.terms_accepted_version is null
]]></system-out>
  </testcase>
  <testcase name="findByIpAddressOrderByAcceptedAtDesc_ShouldReturnAcceptancesByIp" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.021">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select ta1_0.id,ta1_0.accepted_at,ta1_0.ip_address,ta1_0.terms_version,ta1_0.user_id,ta1_0.user_agent from terms_acceptance ta1_0 where ta1_0.ip_address=? order by ta1_0.accepted_at desc
]]></system-out>
  </testcase>
  <testcase name="findByUserAndTermsVersion_ShouldReturnCorrectAcceptance" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.027">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select ta1_0.id,ta1_0.accepted_at,ta1_0.ip_address,ta1_0.terms_version,ta1_0.user_id,ta1_0.user_agent from terms_acceptance ta1_0 where ta1_0.user_id=? and ta1_0.terms_version=?
]]></system-out>
  </testcase>
  <testcase name="existsByUserIdAndTermsVersion_ShouldReturnCorrectResult" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.053">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select count(ta1_0.id)>0 from terms_acceptance ta1_0 where ta1_0.user_id=? and ta1_0.terms_version=?
Hibernate: select count(ta1_0.id)>0 from terms_acceptance ta1_0 where ta1_0.user_id=? and ta1_0.terms_version=?
]]></system-out>
  </testcase>
  <testcase name="existsByUserId_ShouldReturnCorrectResult" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.028">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select count(ta1_0.id)>0 from terms_acceptance ta1_0 where ta1_0.user_id=?
Hibernate: select count(ta1_0.id)>0 from terms_acceptance ta1_0 where ta1_0.user_id=?
]]></system-out>
  </testcase>
  <testcase name="existsByUserAndTermsVersion_ShouldReturnCorrectResult" classname="com.blog.api.repository.TermsAcceptanceRepositoryTest" time="0.026">
    <system-out><![CDATA[Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (account_locked,created_at,email,email_verified,email_verified_at,failed_login_attempts,last_login,locked_until,password,password_changed_at,role,terms_accepted_version,username,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: insert into terms_acceptance (accepted_at,ip_address,terms_version,user_id,user_agent,id) values (?,?,?,?,?,default)
Hibernate: select ta1_0.id from terms_acceptance ta1_0 where ta1_0.user_id=? and ta1_0.terms_version=? fetch first ? rows only
Hibernate: select ta1_0.id from terms_acceptance ta1_0 where ta1_0.user_id=? and ta1_0.terms_version=? fetch first ? rows only
Hibernate: select ta1_0.id from terms_acceptance ta1_0 where ta1_0.user_id=? and ta1_0.terms_version=? fetch first ? rows only
Hibernate: select ta1_0.id from terms_acceptance ta1_0 where ta1_0.user_id=? and ta1_0.terms_version=? fetch first ? rows only
]]></system-out>
  </testcase>
</testsuite>